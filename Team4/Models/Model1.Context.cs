//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Team4.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Team4Entities : DbContext
    {
        public Team4Entities()
            : base("name=Team4Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Booking_Table> Booking_Table { get; set; }
        public virtual DbSet<BusDetails_Table> BusDetails_Table { get; set; }
        public virtual DbSet<Customer_Table> Customer_Table { get; set; }
        public virtual DbSet<Login_Table> Login_Table { get; set; }
        public virtual DbSet<Route_Table> Route_Table { get; set; }
        public virtual DbSet<Schedule_Table> Schedule_Table { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<ViewHistory> ViewHistories { get; set; }
        public virtual DbSet<CS_Table> CS_Table { get; set; }
        public virtual DbSet<destination> destinations { get; set; }
    
        public virtual ObjectResult<history_Result> history(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<history_Result>("history", cidParameter);
        }
    
        public virtual ObjectResult<SP_Test_Result> SP_Test(string from, string to, Nullable<System.DateTime> doj, Nullable<int> not)
        {
            var fromParameter = from != null ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(string));
    
            var dojParameter = doj.HasValue ?
                new ObjectParameter("doj", doj) :
                new ObjectParameter("doj", typeof(System.DateTime));
    
            var notParameter = not.HasValue ?
                new ObjectParameter("not", not) :
                new ObjectParameter("not", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Test_Result>("SP_Test", fromParameter, toParameter, dojParameter, notParameter);
        }
    }
}
